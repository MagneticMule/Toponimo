package com.magneticmule.toponimo.client.ui;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.graphics.PixelFormat;
import android.os.AsyncTask;
import android.os.Bundle;

import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;

import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

//import com.facebook.android.*;
//import com.facebook.android.Facebook.*;
import com.google.gson.Gson;
import com.magneticmule.toponimo.client.R;
import com.magneticmule.toponimo.client.ApiKeys;
import com.magneticmule.toponimo.client.ToponimoApplication;
import com.magneticmule.toponimo.client.structures.userstructure.UserDetails;
import com.magneticmule.toponimo.client.utils.http.HttpUtils;

public class LoginActivity extends Activity {

	/*
	 * requires the app key generated by the fb api, see
	 * http://developers.facebook.com/docs/guides/mobile/
	 */
	// Facebook facebook = new Facebook(ApiKeys.FACEBOOK_API_KEY);

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login);

		// the text boxes for user name and password
		final EditText userNameEditText = (EditText) findViewById(R.id.usernameEditText);
		final EditText passwordEditText = (EditText) findViewById(R.id.passwordEditText);

		// the image file used as a button for login via facebook
		final ImageView facebookLoginButton = (ImageView) findViewById(R.id.facebookLoginButton);

		// if the facebook button is pressed
		facebookLoginButton.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				// facebookLogin();
			}
		});

		// if the LOGIN button is pressed
		final Button loginButton = (Button) findViewById(R.id.loginbtn);
		loginButton.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				String username = userNameEditText.getText().toString();
				String userPassword = passwordEditText.getText().toString();

				if (HttpUtils.isOnline(getApplicationContext())) {
					if (username.length() != 0 && userPassword.length() != 0) {
						(new ValidateUser(username, userPassword))
								.execute((Object) null);
					} else {
						Toast toast = Toast.makeText(LoginActivity.this,
								"Please supply both your username and pasword",
								Toast.LENGTH_SHORT);
						toast.show();
					}
					// Intent i = new Intent(LoginActivity.this,
					// PlaceListActivity.class);
					// startActivity(i);
				}
			}
		});

		// when the Signup button is pressed
		final Button signupButton = (Button) findViewById(R.id.signupbtn);
		signupButton.setOnClickListener(new View.OnClickListener() {

			public void onClick(View v) {
				Toast toast = Toast.makeText(LoginActivity.this,
						"Feature pending", Toast.LENGTH_SHORT);
				toast.show();
				Intent i = new Intent(LoginActivity.this,
						PlaceListActivity.class);
				startActivity(i);

			}
		});
	}

	// @Override
	// public void onConfigurationChanged(Configuration newConfig) {
	// super.onConfigurationChanged(newConfig);
	// setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
	// }
	//
	// // Handles the facebook login screen.
	// public void facebookLogin() {
	// if (facebook.isSessionValid()) {
	// Intent i = new Intent(LoginActivity.this, PlaceListActivity.class);
	// startActivity(i);
	// } else {
	//
	// /**
	// * see: http://developers.facebook.com/docs/authentication/permissions/
	// * for a full list of permissions
	// */
	//
	// facebook.authorize(this, new String[] { "user_about_me", "user_website",
	// "publish_stream" },
	// new DialogListener() {
	//
	// public void onComplete(Bundle values) {
	//
	// }
	//
	// public void onFacebookError(FacebookError error) {
	// System.out.println("Error: " + error.getMessage().toString());
	// }
	//
	// public void onError(DialogError e) {
	//
	// }
	//
	// public void onCancel() {
	// // return to login screen
	// }
	// });
	// }
	// }

	public void startPlaceListActivity(UserDetails _userDetails) {
		Intent i = new Intent(LoginActivity.this, PlaceListActivity.class);
		startActivity(i);
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		// facebook.authorizeCallback(requestCode, resultCode, data);
	}

	@Override
	public void onAttachedToWindow() {
		super.onAttachedToWindow();
		Window window = getWindow();
		window.setFormat(PixelFormat.RGBA_8888);
		window.addFlags(WindowManager.LayoutParams.FLAG_DITHER);
	}

	private class ValidateUser extends AsyncTask<Object, Void, UserDetails> {

		private String username = "";
		private String password = "";

		ProgressDialog dialog;

		public ValidateUser(String _username, String _password) {
			this.username = _username;
			this.password = _password;
		}

		@Override
		protected void onPreExecute() {
			dialog = new ProgressDialog(LoginActivity.this);
			dialog.setTitle("Please wait");
			dialog.setMessage("Logging in");
			dialog.setIndeterminate(true);
			dialog.setCancelable(false);
			dialog.show();
			super.onPreExecute();
		}

		@Override
		protected UserDetails doInBackground(Object... arg0) {
			UserDetails userDetails = null;
			try {
				Gson gson = new Gson();
				String jsonData = HttpUtils.authenticate(ToponimoApplication
						.getApp().getHttpClient(), username, password, "true",
						ApiKeys.LOGIN_URL);
				userDetails = gson.fromJson(jsonData, UserDetails.class);
				Log.i("Firstname", userDetails.getFirstName().toString());
				Log.i("Lastname", userDetails.getLastName().toString());
				Log.i("ID", userDetails.getUserId().toString());
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
			}

			return userDetails;

		}

		@Override
		protected void onPostExecute(UserDetails result) {
			super.onPostExecute(result);
			dialog.dismiss();
			startPlaceListActivity(result);
		}
	}
}
